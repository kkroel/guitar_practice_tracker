# Generated by Django 2.1.5 on 2019-02-16 17:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(choices=[('ROCK', 'Rock'), ('BLUEGRASS', 'Bluegrass'), ('CLASSICAL', 'Classical'), ('FOLK', 'Folk'), ('POP', 'Pop'), ('COUNTRY', 'Country'), ('JAZZ', 'Jazz'), ('OTHER', 'Other')], default='ROCK', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced')], default='BEGINNER', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('TAB', 'Tab'), ('NOTATION', 'Notation'), ('PERFORMANCE', 'Performance'), ('BOOK', 'Book'), ('LESSON', 'Lesson'), ('NOTES', 'Notes')], default='TAB', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('PERSONAL_ENJOYMENT', 'Personal_Enjoyment'), ('EXERCISE', 'Exercise'), ('REPETOIRE', 'Repetoire'), ('RECITAL', 'Recital')], default='PERSONAL_ENJOYMENT', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('composer', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Genre', to_field='genre')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Level', to_field='level')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In_Progress'), ('GOAL_ACHIEVED', 'Goal_Achieved'), ('MAINTENANCE', 'Maintenance'), ('ON_HOLD', 'On_Hold'), ('INACTIVE', 'Inactive')], default='IN_PROGRESS', max_length=32, unique=True)),
                ('description', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=32, unique=True)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='StudentSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tempo', models.IntegerField(default=50, help_text='Current tempo in BPM')),
                ('tempo_goal', models.IntegerField()),
                ('purpose', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Purpose', to_field='purpose')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Song')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Status', to_field='status')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField(choices=[('FINGERSTYLE', 'FingerStyle'), ('FLATPICK', 'Flatpick'), ('HYBRID_PICKING', 'Hybrid_Picking'), ('STRUMMING', 'Strumming')], default='FINGERSTYLE', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entered', models.DateTimeField(verbose_name='Entered')),
                ('update', models.TextField(blank=True)),
                ('tempo', models.IntegerField(blank=True)),
                ('display_update', models.CharField(max_length=64)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.StudentSong')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='student_songs', through='student.StudentSong', to='student.Song'),
        ),
        migrations.AddField(
            model_name='song',
            name='style',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Style', to_field='style'),
        ),
        migrations.AddField(
            model_name='link',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.StudentSong'),
        ),
        migrations.AddField(
            model_name='link',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsong',
            unique_together={('student', 'song')},
        ),
    ]
